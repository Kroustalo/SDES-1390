//function to calclulate P10
int P10_perm(int key) {
    if (key > 1023) {
        printf("value is greater than 10 bits");
        return -1;
    }

    int temp = 0, mafs;
    int P10_GUIDE[10] = { 3,7,9,5,8,0,6,1,2,4 }; //Shift positions according to pdf
    for (int i = 0; i < 10; i++) {
        mafs = bin(10, i);
        temp += (key & mafs) / mafs * 1 << P10_GUIDE[i];
    }
    return temp;

}

//aux function for packing shi(f)t commands
static inline int bin(int bits, int shift) {
    return (1 << (bits - 1)) >> shift;
}


int K_perm(int split[2]) { //Create K keys with specific input
    int temp = (0b0000000000 | split[0]) << 5;
    temp = temp + split[1]; //combine to extract 8 lower bits

    //print_bin(temp, 10); //test
    temp = temp & 0b11111111; // get 8bit number
    //print_bin(temp, 8); //test

    int k = 0, mafs;
    int P8_GUIDE[8] = { 6,4,2,7,5,3,0,1 }; //Shift positions according to pdf
    for (int i = 0; i < 8; i++) {
        mafs = bin(8, i);
        k += (temp & mafs) / mafs * 1 << P8_GUIDE[i];
    }

    return k;
}